{
  "openapi": "3.0.0",
  "info": {
    "description": "OpenAPI standard for MyPortfolio",
    "title": "authservice-api",
    "version": "1.0.1",
    "contact": {
      "name": "API Support",
      "url": "http://www.threefoldsystems.com/support",
      "email": "info@threefooldsystems.com"
    }
  },
  "paths": {
    "/authservice/api/v2/sys/info/isalive": {
      "get": {
        "summary": "Openshift readiness and liveliness probes",
        "responses": {
          "200": {
            "description": "Readiness and liveliness probe check",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/authservice/api/v1/verify": {
      "post": {
        "summary": "Api endpoint that calls the middleware login api to get profile data",
        "operationId": "verify",
        "requestBody": {
          "description": "Verify JWT Token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Setup the document store database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://nginx-service-myportfolio.apps.aws2-dev.ocp.14west.io",
      "variables": {
        "port": {
          "default": "443"
        },
        "basePath": {
          "default": "/"
        }
      },
      "description": "base path and url for microservices"
    }
  ],
  "components": {
    "schemas": {
      "SchemaInterface": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "format": "int64"
          },
          "lastupdate": {
            "type": "number",
            "format": "int64"
          },
          "metainfo": {
            "type": "string"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate"
            }
          },
          "publications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Publication"
            }
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stock"
            }
          },
          "watch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Watchlist"
            }
          }
        }
      },
      "Affiliate": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "object",
            "format": "int64"
          },
          "id": {
            "type": "number",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Publication": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "object",
            "format": "int64"
          },
          "id": {
            "type": "number",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "affiliateid": {
            "type": "number",
            "format": "int64"
          }
        }
      },
      "Watchlist": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "object",
            "format": "int64"
          },
          "customerid": {
            "type": "number",
            "format": "int64"
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stock"
            }
          }
        }
      },
      "Stock": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "object",
            "format": "int64"
          },
          "publicationid": {
            "type": "number",
            "format": "int64"
          },
          "affiliateid": {
            "type": "number",
            "format": "int64"
          },
          "refid": {
            "type": "number",
            "format": "int64"
          },
          "symbol": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "buy": {
            "type": "number",
            "format": "float64"
          },
          "stop": {
            "type": "number",
            "format": "float64"
          },
          "last": {
            "type": "number",
            "format": "float64"
          },
          "change": {
            "type": "number",
            "format": "float64"
          },
          "recommendation": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "int64"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "format": "int64"
          },
          "statuscode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/SchemaInterface"
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Entity not found."
      },
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "Forbidden": {
        "description": "Not allowed to access this endpoint"
      },
      "GeneralError": {
        "description": "General Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
